<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>net472;net8.0</TargetFrameworks>
		<LangVersion>latest</LangVersion>
		<IsPackable>true</IsPackable>
		<Version>1.2.1</Version>
		<Title>Mister.Version</Title>
		<Description>Generates versions independently for C# projects in a mono-repo with enhanced dev and feature branch support.</Description>
		<PackageTags>versioning;git;monorepo;csharp;msbuild</PackageTags>
		<License>MIT</License>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<RepositoryUrl>https://github.com/discrete-sharp/Mister.Version</RepositoryUrl>
		<!-- This target will run when MSBuild is collecting the files to be packaged, and we'll implement it below. This property controls the dependency list for this packaging process, so by adding our custom property we hook ourselves into the process in a supported way. -->
		<TargetsForTfmSpecificBuildOutput>
			$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage
		</TargetsForTfmSpecificBuildOutput>
		<!-- This property tells MSBuild where the root folder of the package's build assets should be. Because we are not a library package, we should not pack to 'lib'. Instead, we choose 'tasks' by convention. -->
		<BuildOutputTargetFolder>tasks</BuildOutputTargetFolder>
		<!-- NuGet does validation that libraries in a package are exposed as dependencies, but we _explicitly_ do not want that behavior for MSBuild tasks. They are isolated by design. Therefore we ignore this specific warning. -->
		<NoWarn>NU5100</NoWarn>
		<!-- Suppress NuGet warning NU5128. -->
		<SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
		<!-- Tell the SDK to generate a deps.json file -->
		<GenerateDependencyFile>true</GenerateDependencyFile>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageIcon>icon.png</PackageIcon>
		<LangVersion>latest</LangVersion>
	</PropertyGroup>

	<ItemGroup>
		<None Include="README.md" Pack="true" PackagePath="\" />
		<None Include="../icon.png" Pack="true" PackagePath="" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Build.Framework" Version="17.13.9" PrivateAssets="all" />
		<PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.13.9" PrivateAssets="all" ExcludeAssets="Runtime" />
		<PackageReference Include="LibGit2Sharp" Version="0.31.0" PrivateAssets="all" />
		<PackageReference Include="LibGit2Sharp.NativeBinaries" Version="2.0.323" PrivateAssets="all" ExcludeAssets="all" />
		<PackageReference Include="System.Text.Json" Version="8.0.5" PrivateAssets="all" />
		<PackageReference Include="YamlDotNet" Version="13.7.1" PrivateAssets="all" />
	</ItemGroup>

	<!-- Reference the core project -->
	<ItemGroup>
		<ProjectReference Include="..\Mister.Version.Core\Mister.Version.Core.csproj" PrivateAssets="all" />
	</ItemGroup>

	<Choose>
		<When Condition="'$(TargetFramework)'=='net472'">
			<PropertyGroup>
				<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
			</PropertyGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<Compile Remove="PathUtils.cs" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
		<ItemGroup>
			<!-- Include native libraries from libs folder -->
			<LibGitRefs Include="../libs/git2-3f4182d.dll" />
			<LibGitRefs Include="../libs/libgit2-3f4182d.dylib" />
			<LibGitRefs Include="../libs/libgit2-3f4182d.so" />
			
			<!-- The TargetPath is the path inside the package that the source file will be placed. This is already precomputed in the ReferenceCopyLocalPaths items' DestinationSubPath, so reuse it here. -->
			<BuildOutputInPackage Include="@(ReferenceCopyLocalPaths)" TargetPath="%(ReferenceCopyLocalPaths.DestinationSubPath)" />
			
			<!-- Add native libraries to both framework targets -->
			<BuildOutputInPackage Include="../libs/git2-3f4182d.dll" TargetPath="git2-3f4182d.dll">
				<TargetFramework>net472</TargetFramework>
			</BuildOutputInPackage>
			<BuildOutputInPackage Include="../libs/libgit2-3f4182d.dylib" TargetPath="libgit2-3f4182d.dylib">
				<TargetFramework>net472</TargetFramework>
			</BuildOutputInPackage>
			<BuildOutputInPackage Include="../libs/libgit2-3f4182d.so" TargetPath="libgit2-3f4182d.so">
				<TargetFramework>net472</TargetFramework>
			</BuildOutputInPackage>
			<BuildOutputInPackage Include="../libs/git2-3f4182d.dll" TargetPath="git2-3f4182d.dll">
				<TargetFramework>net8.0</TargetFramework>
			</BuildOutputInPackage>
			<BuildOutputInPackage Include="../libs/libgit2-3f4182d.dylib" TargetPath="libgit2-3f4182d.dylib">
				<TargetFramework>net8.0</TargetFramework>
			</BuildOutputInPackage>
			<BuildOutputInPackage Include="../libs/libgit2-3f4182d.so" TargetPath="libgit2-3f4182d.so">
				<TargetFramework>net8.0</TargetFramework>
			</BuildOutputInPackage>
		</ItemGroup>
	</Target>
	
	<!-- This target adds the generated deps.json file to our package output -->
	<Target Name="AddBuildDependencyFileToBuiltProjectOutputGroupOutput" BeforeTargets="BuiltProjectOutputGroup" Condition=" '$(GenerateDependencyFile)' == 'true'">
		<ItemGroup>
			<BuiltProjectOutputGroupOutput Include="$(ProjectDepsFilePath)" TargetPath="$(ProjectDepsFileName)" FinalOutputPath="$(ProjectDepsFilePath)" />
		</ItemGroup>
	</Target>

	<ItemGroup>
		<!-- these lines pack the build props/targets files to the `build` folder in the generated package.
        by convention, the .NET SDK will look for build\<Package Id>.props and build\<Package Id>.targets
        for automatic inclusion in the build. -->
		<Content Include="build\Mister.Version.props" PackagePath="build\" />
		<Content Include="build\Mister.Version.targets" PackagePath="build\" />
		
		<!-- Include native libraries for all platforms -->
		<Content Include="../libs/git2-3f4182d.dll" PackagePath="tasks/net472/" />
		<Content Include="../libs/libgit2-3f4182d.dylib" PackagePath="tasks/net472/" />
		<Content Include="../libs/libgit2-3f4182d.so" PackagePath="tasks/net472/" />
		<Content Include="../libs/git2-3f4182d.dll" PackagePath="tasks/net8.0/" />
		<Content Include="../libs/libgit2-3f4182d.dylib" PackagePath="tasks/net8.0/" />
		<Content Include="../libs/libgit2-3f4182d.so" PackagePath="tasks/net8.0/" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Mister.Version.Core\Mister.Version.Core.csproj" />
	</ItemGroup>

</Project>