name: 'Test Versioning Scenarios - Linux'
description: 'Run versioning tests on Linux with mock git repositories'
inputs:
  dotnet-version:
    description: '.NET SDK version to use'
    required: false
    default: '8.0.x'
  working-directory:
    description: 'Working directory for the tests'
    required: false
    default: '.'

runs:
  using: 'composite'
  steps:
    - name: Setup Test Environment
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "Setting up test environment..."
        export TEST_DIR="${{ runner.temp }}/test-repos"
        echo "TEST_DIR=$TEST_DIR" >> $GITHUB_ENV
        
        # Clean up any previous test runs
        if [ -d "$TEST_DIR" ]; then
          rm -rf "$TEST_DIR"
        fi
        mkdir -p "$TEST_DIR"

    - name: Build CLI Tool
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "Building Mister.Version CLI tool..."
        dotnet build ./Mister.Version.CLI/Mister.Version.CLI.csproj -c Debug
        
        # Set tool path
        TOOL_PATH="${{ inputs.working-directory }}/Mister.Version.CLI/bin/Debug/net8.0/mr-version"
        echo "TOOL_PATH=$TOOL_PATH" >> $GITHUB_ENV

    - name: Test - Initial Repository (No Tags)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_initial_repo

    - name: Test - Single Release Tag
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_single_release_tag

    - name: Test - Feature Branch Versioning
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_feature_branch

    - name: Test - Release Branch Versioning
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_release_branch

    - name: Test - Monorepo Multiple Projects
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_monorepo

    - name: Test - Pre-release Versions
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_prerelease_versions

    - name: Test - Dev Branch Versioning
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_dev_branch

    - name: Test - Build Metadata
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        source .github/actions/test-versioning-linux/test-functions.sh
        test_build_metadata

    - name: Generate Test Report
      if: always()
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "${{ runner.temp }}/test-results.txt" ]; then
          cat "${{ runner.temp }}/test-results.txt" >> $GITHUB_STEP_SUMMARY
        else
          echo "No test results found" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload Test Artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: linux-test-repos
        path: ${{ runner.temp }}/test-repos/