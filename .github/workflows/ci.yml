name: CI Build and Test

on:
  push:
    branches: [ main, dev, abstract ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # disabled for now: , macos-latest]
        dotnet-version: ['8.0.x']

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for versioning tests

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Solution
      run: dotnet build --no-restore --configuration Release

    - name: Run Unit Tests
      run: dotnet test --no-build --configuration Release --verbosity normal --logger "trx;LogFileName=test-results.trx"
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}
        path: "**/*.trx"

  versioning-scenarios:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build-and-test
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Run Versioning Tests (Linux)
      if: runner.os != 'Windows'
      uses: ./.github/actions/test-versioning-linux
      with:
        dotnet-version: '8.0.x'

    - name: Run Versioning Tests (Windows)
      if: runner.os == 'Windows'
      uses: ./.github/actions/test-versioning-windows
      with:
        dotnet-version: '8.0.x'

  regression-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run Version Resolution Tests
      run: |
        echo "Running specific version resolution regression tests..."
        dotnet test --no-build --configuration Release --filter "FullyQualifiedName~VersionResolutionTests" --verbosity detailed

    - name: Run Version Calculator Tests
      run: |
        echo "Running version calculator tests..."
        dotnet test --no-build --configuration Release --filter "FullyQualifiedName~VersionCalculatorTests" --verbosity normal

    - name: Run Integration Test Suite
      run: |
        echo "Running integration test suite..."
        chmod +x ./test-versioning-scenarios.sh
        export USE_DOTNET=true
        ./test-versioning-scenarios.sh
      working-directory: mister.version

  code-coverage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Debug

    - name: Test with Coverage
      run: dotnet test --no-build --configuration Debug --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage
        fail_ci_if_error: false
        verbose: true